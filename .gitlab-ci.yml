stages:
  - build
  - test
  - deploy

docker:build:emailservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building emailservice..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name emailservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:emailservice --push ./src/emailservice/

.docker:build:cartservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shippins service..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name cartservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:cartservice --push ./src/cartservice/src/

.docker:build:currencyservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shippins service..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name currencyservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/currencyservice --push ./src/currencyservice

.docker:build:productcatalogservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shippins service..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name productcatalogservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/productcatalogservice --push ./src/productcatalogservice

.docker:build:shippingservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shippins service..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name shippingservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/shippingservice --push ./src/shippingservice

.dev:playground:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  variables:
    IMAGE_TAG: python #node #golang
  script:    # glpat-xJo7r55bCB5xgz8eSJAU   registry.gitlab.com/sandesh-lab/microservices-demo/dev-playground:latest
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock" 
    - docker buildx create --name my-builder --driver docker-container --bootstrap --use
    - docker buildx inspect
    - docker buildx build --tag $CI_REGISTRY_IMAGE/dev-playground:"${IMAGE_TAG}" --push -f Dockerfile.dev .