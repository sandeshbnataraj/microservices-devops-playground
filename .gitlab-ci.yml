stages:
  - build
  - test
  - deploy

default:
  image: docker:28.2
  services:
    - docker:28.2-dind

adservice:build:
  stage: build
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - |
      docker context use default || \
        docker context create default --docker "host=unix:///var/run/docker.sock"
    - |
      docker buildx create \
        --name mybuilder \
        --driver docker-container \
        --bootstrap \
        --use
    - docker buildx inspect
    - | 
      docker buildx build \
        --output type=local,dest=./src/adservice/build-out \
        -f ./src/adservice/Dockerfile.build \
        ./src/adservice/
    - ls -la
  artifacts:
    paths:
      - ./src/adservice/build-out

adservice:runtime:build:
  stage: build
  needs:
    - adservice:build
  script:
    - echo "runtime build of adservice"
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - |
      docker buildx create \
        --name runtime-build \
        --driver docker-container \
        --bootstrap \
        --use
    - docker buildx inspect
    - |
      docker buildx build --platform linux/amd64,linux/arm64 --tag $CI_REGISTRY_IMAGE/adservice:$CI_COMMIT_SHORT_SHA --build-context gitlab-artifact=./src/adservice/build-out \
        -f ./src/adservice/Dockerfile.runtime \
        --push \
        --sbom=true \
        --provenance=true


.docker:build:frontend:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shoppingassistantservice..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name frontend-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:frontend --push ./src/frontend/

.docker:build:adservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  before_script:
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes  # for QUEM emualtion; Requires privileged: true in your GitLab job config.
  script:
    - echo "building shoppingassistantservice..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name adservice-build --driver docker-container --use --bootstrap
    - docker buildx build --platform linux/amd64,linux/arm64 --tag $CI_REGISTRY_IMAGE/adservice:$CI_COMMIT_SHORT_SHA --push ./src/adservice/

.docker:build:recommendationservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shoppingassistantservice..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name recommendationservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:recommendationservice --push ./src/recommendationservice/

.docker:build:checkoutservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shoppingassistantservice..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name checkoutservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:checkoutservice --push ./src/checkoutservice/

.docker:build:shoppingassistantservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shoppingassistantservice..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name shoppingassistantservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:shoppingassistantservice --push ./src/shoppingassistantservice/

.docker:build:loadgenerator:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building loadgenerator..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name loadgenerator-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:loadgenerator --push ./src/loadgenerator/

.docker:build:paymentservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building paymentservice..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name paymentservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:paymentservice --push ./src/paymentservice/

.docker:build:emailservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building emailservice..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name emailservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:emailservice --push ./src/emailservice/

.docker:build:cartservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shippins service..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name cartservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:cartservice --push ./src/cartservice/src/

.docker:build:currencyservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shippins service..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name currencyservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:currencyservice --push ./src/currencyservice

.docker:build:productcatalogservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shippins service..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name productcatalogservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:productcatalogservice --push ./src/productcatalogservice

.docker:build:shippingservice:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  script:
    - echo "building shippins service..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock"
    - docker buildx create --name shippingservice-build --driver docker-container --use --bootstrap
    - docker buildx build --tag $CI_REGISTRY_IMAGE/deploy:shippingservice --push ./src/shippingservice

.dev:playground:
  stage: build
  image: docker:28.2
  services:
    - docker:28.2-dind
  variables:
    IMAGE_TAG: gradle #node #python #golang
  script:    # glpat-xJo7r55bCB5xgz8eSJAU   registry.gitlab.com/sandesh-lab/microservices-demo/dev-playground:latest
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker context use default || docker context create default --docker "host=unix:///var/run/docker.sock" 
    - docker buildx create --name my-builder --driver docker-container --bootstrap --use
    - docker buildx inspect
    - docker buildx build --tag $CI_REGISTRY_IMAGE/dev-playground:"${IMAGE_TAG}" --push -f Dockerfile.dev .